{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","App","state","NONE","handleClickReverse","setState","handleClickSortByLength","handleClickSortAlphabetically","handleClickReset","this","className","type","cn","onClick","map","good","SortByLength","SortAlphabetically","Reverse","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAU7D,OAJIR,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAyB,CACvBX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,UAAS,SAACH,GAAD,MAAY,CAAEX,YAAaW,EAAMX,gBAPnD,EAUEe,wBAA0B,WACxB,EAAKD,SAAS,CAAEf,SAAUJ,EAASY,UAXvC,EAcES,8BAAgC,WAC9B,EAAKF,SAAS,CAAEf,SAAUJ,EAASO,YAfvC,EAkBEe,iBAAmB,WACjB,EAAKH,SAAS,CACZf,SAAUJ,EAASiB,KACnBZ,YAAY,KArBlB,4CAyBE,WACE,MAAiCkB,KAAKP,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaJ,EAASO,WAGtCoB,QAASJ,KAAKF,8BARhB,iCAaA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaJ,EAASY,SAGtCe,QAASJ,KAAKH,wBARhB,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAarB,IAGjBsB,QAASJ,KAAKL,mBARhB,sBAcIb,GAAcD,IAAaJ,EAASiB,OACpC,wBACEQ,KAAK,SACLD,UAAU,6BACVG,QAASJ,KAAKD,iBAHhB,sBAWN,6BACE,6BACGpB,EAAkBD,EAAiBsB,KAAKP,OAAOY,KAAI,SAAAC,GAAI,OACtD,oBACE,UAAQ,OAERL,UAAWE,IACT,CACEI,aAAc1B,IAAaJ,EAASY,OACpCmB,mBAAoB3B,IAAaJ,EAASO,SAC1CyB,QAAS3B,IAPf,SAWGwB,GATIA,iBAxFrB,GAAyBI,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69b3aae8.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickReverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  handleClickSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleClickSortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleClickReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleClickSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleClickSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleClickReverse}\n          >\n            Reverse\n          </button>\n\n          {\n            ((isReversed || sortType !== SortType.NONE) && (\n              <button\n                type=\"button\"\n                className=\"button is-warning is-light\"\n                onClick={this.handleClickReset}\n              >\n                Reset\n              </button>\n            ))\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n                className={cn(\n                  {\n                    SortByLength: sortType === SortType.LENGTH,\n                    SortAlphabetically: sortType === SortType.ALPHABET,\n                    Reverse: isReversed,\n                  },\n                )}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}